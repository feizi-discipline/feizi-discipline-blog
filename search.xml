<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2019%2F09%2F17%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[前言浏览掘金的时候，看到了一篇搭建博客的文章，感觉挺不错的，就决定去搭建一个属于自己的博客 准备工作 （Mac） 电脑一台 安装Git 安装Node.js GitHub账号或者Gitee账号一个 开始搭建 Hexo博客(官方文档 )安装Hexo安装Hexo之前需要安装相关环境： Git Node.js 安装 Node.js 后安装 npm npm 是 JavaScript 世界的包管理工具,并且是 Node.js 平台的默认包管理工具。通过 npm 可以安装、共享、分发代码,管理项目依赖关系。 1npm -g install npm 注：不能翻墙的同学，可使用 npm淘宝镜像 cnpm 1npm install -g cnpm --registry=https://registry.npm.taobao.org 我们继续来安装Hexo: 1npm install -g hexo-cli 测试一下是否安装成功： 1hexo version 创建博客仓库我这里选择的是Gitee账号（因为Gitee在国内加载要快一些） 官方说明：如果你想你的首页访问地址不带二级目录，如ipvb.gitee.io，你需要建立一个与自己个性地址同名的仓库，如 https://gitee.com/ipvb 这个用户，想要创建一个自己的站点，但不想以子目录的方式访问，想以ipvb.gitee.io直接访问，那么他就可以创建一个名字为ipvb的仓库 https://gitee.com/ipvb/ipvb 部署完成后，就可以以 https://ipvb.gitee.io 进行访问了。 如果你对上述说明不能很明白的话，那也不要紧，继续跟着我做 首先你要创建一个public的项目，保证你的仓库名与你的个人空间地址相同 注意上图👆红色圈中的地方一定要保持相同（这样才能保证你的首页不带二级目录） 码云上的个人空间地址，每个用户可以修改一次。 创建仓库后，我们需要在本地新建一个名称是仓库名的文件夹，然后进行我们博客的初始化 1hexo init 仓库名 执行完成后，我们进入文件夹查看，发现多了如下结构： 启动博客 1hexo s 进行访问，浏览器中输入https://localhost:4000 或者直接点击我 访问。 安装hexo-deployer-git自动部署发布工具 1npm install hexo-deployer-git --save 打开_config.yml，对我们的博客进行完善。 123456789# Sitetitle: helloWord //博客的名字author: author //你的名字language: zh-Hans //语言 中文 # Deploymentdeploy: type: git //Github发布 repo: https://gitee.com/feizi-discipline/feizi-discipline.git //创建的Gitee仓库克隆/下载链接也可以选择ssh branch: master 不喜欢默认主题的可以自行去官网下载替换 hexo官网主题地址：https://hexo.io/themes/ 现在我们的博客还仅仅只能在本地进行查看，下面我们将要通过域名去访问博客 将博客的相关文件发布到Gitee仓库中（第一次需要输入账号密码，就输当前登陆的Gitee用户） 1234hexo clean &amp;&amp; hexo g &amp;&amp; hexo dhexo clean //清除缓存文件 (db.json) 和已生成的静态文件 (public)hexo g //生成缓存和静态文件hexo d //重新部署到服务器 打开码云，查看刚刚创建的仓库，如果上传成功，进行如下操作： 开启 Gitee Pages 服务 点击启动，复制一下生成的网站地址 然后再打开_config.yml，修改如下内容： 12345# URLurl: https://feizi-discipline.gitee.io //开启 Gitee Pages 服务，生成的网站地址root: /permalink: :year/:month/:day/:title/permalink_defaults: 配置完成后，重新去本地文件夹执行一下： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 并去开启 Gitee Pages 服务重新更新一下，即可大功告成 重点归纳 正确安装所需环境 正确创建仓库（注意仓库名，归属，路径三处名称保持一致） 在发布到Gitee远程仓库后，需要在Gitee Pages服务中重新更新部署]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. var options = {"narrow":false,"autoplay":true,"showlrc":0,"mutex":true,"music":[{"title":"海","author":"纯音乐","url":"http://pxjl3qvgl.bkt.clouddn.com/7e7e94040c994decdd8ff422622cf4fc.mp3","pic":"http://pxjl3qvgl.bkt.clouddn.com/WX20190911-223736@2x.png","lrc":"https://歌词.lrc"}]}; options.element = document.getElementById("aplayer-cMPzIKcM"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
